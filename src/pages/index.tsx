import { useState, MouseEvent, useEffect } from "react";
import Head from 'next/head'
import { Inter } from 'next/font/google'
import Snackbar from '@/components/shared/Notifications/Snackbar'
const inter = Inter({ subsets: ['latin'] })
import Header from "@/components/header";
import { useS3Upload } from "next-s3-upload";

import { ArchiveBoxArrowDownIcon } from "@heroicons/react/24/outline";
import { useRouter } from 'next/router'
import BasicButton from "@/components/shared/Buttons/BasicButton";
import Link from "next/link";
import { useTheme } from 'next-themes'
import { motion } from "framer-motion"




export default function Home() {
  const { theme, setTheme } = useTheme()
  const [mounted, setMounted] = useState<boolean>(false)
  useEffect(() => setMounted(true), [])

  const router = useRouter()

  let [imageUrl, setImageUrl] = useState<string>();
  let { FileInput, openFileDialog, uploadToS3 } = useS3Upload();

  let handleFileChange = async (file: File) => {
    let { url } = await uploadToS3(file);
    setImageUrl(url);
  };

  const aaaa = false
  const [isVisible, setIsVisible] = useState(true);
  const checkoutPage = (e: MouseEvent<HTMLButtonElement>, href: string): void => {
    e.preventDefault();
    router.push(href);
  };
  return (
    <>

        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main >


          <Header />
          <h1>{router.locale}</h1>
          <button
            aria-label="DarkModeToggle"
            type="button"
            onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}
          >
            {mounted && <>{theme === 'dark' ? "moon" : "light"}</>}
          </button>

          {router.locales?.map((locale) => (
            <h3 key={locale}>
              <Link href="/about" locale={locale}>
                {locale}
              </Link>
            </h3>
          ))}

          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
            <path strokeLinecap="round" strokeLinejoin="round" d="M10.5 6h9.75M10.5 6a1.5 1.5 0 11-3 0m3 0a1.5 1.5 0 10-3 0M3.75 6H7.5m3 12h9.75m-9.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-3.75 0H7.5m9-6h3.75m-3.75 0a1.5 1.5 0 01-3 0m3 0a1.5 1.5 0 00-3 0m-9.75 0h9.75" />
          </svg>




          <div className="flex justify-center p-8">

            <button
              className={`${aaaa ? "text-1xl" : ""}  
          font-bold h- text-white bg-blue-600 w-96 rounded 
          flex justify-center text-center`}
              onClick={
                (e) => checkoutPage(e, "/checkout")
              }>
            </button>
          </div>

          <div>
            <FileInput onChange={handleFileChange} />

            <button onClick={openFileDialog}>Upload file</button>
            <Snackbar message="aaaa" notificationType="success" />
          </div>
        </main>



    </>
  )
}
